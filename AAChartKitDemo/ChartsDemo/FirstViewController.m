//
//  FirstViewController.m
//  AAChartKit
//
//  Created by An An on 17/3/14.
//  Copyright ¬© 2017Âπ¥ An An. All rights reserved.
//*************** ...... SOURCE CODE ...... ***************
//***...................................................***
//*** https://github.com/AAChartModel/AAChartKit        ***
//*** https://github.com/AAChartModel/AAChartKit-Swift  ***
//***...................................................***
//*************** ...... SOURCE CODE ...... ***************

/*
 
 * -------------------------------------------------------------------------------
 *
 * üåï üåñ üåó üåò  ‚ùÄ‚ùÄ‚ùÄ   WARM TIPS!!!   ‚ùÄ‚ùÄ‚ùÄ üåë üåí üåì üåî
 *
 * Please contact me on GitHub,if there are any problems encountered in use.
 * GitHub Issues : https://github.com/AAChartModel/AAChartKit/issues
 * -------------------------------------------------------------------------------
 * And if you want to contribute for this project, please contact me as well
 * GitHub        : https://github.com/AAChartModel
 * StackOverflow : https://stackoverflow.com/users/7842508/codeforu
 * JianShu       : https://www.jianshu.com/u/f1e6753d4254
 * SegmentFault  : https://segmentfault.com/u/huanghunbieguan
 *
 * -------------------------------------------------------------------------------
 
 */

#import "FirstViewController.h"
#import "SecondViewController.h"
#import "SpecialChartVC.h"
#import "OnlyRefreshChartDataVC.h"
#import "ChartAnimationTypeVC.h"
#import "DrawChartWithAAOptionsVC.h"
#import "ShowManyChartViewVC.h"
#import "ChartListVC.h"
#import "MixedChartVC.h"
#import "ChartSeriesHideOrShowVC.h"
#import "CustomStyleChartVC.h"
#import "MonitorViewController.h"
#import "SupportJSFunctionVC.h"

#define ColorWithRGB(r,g,b,a) [UIColor colorWithRed:(r)/255.0f green:(g)/255.0f blue:(b)/255.0f alpha:(a)]
#define AAGrayColor            [UIColor colorWithRed:245/255.0 green:246/255.0 blue:247/255.0 alpha:1.0]
#define AABlueColor            ColorWithRGB(63, 153,231,1)

@interface FirstViewController ()<UITableViewDelegate,UITableViewDataSource>

@property (nonatomic, strong) NSArray *chartTypeNameArr;
@property (nonatomic, strong) NSArray *sectionTypeArr;

@end

@implementation FirstViewController

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:YES];
    self.navigationController.navigationBar.barTintColor = [UIColor whiteColor];

}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"AAChartKit";
    self.view.backgroundColor = [UIColor whiteColor];

    [self configTheTableView];
    
    // ÁõëÂê¨ÁÇπÂáªÂÖ•Âè£„ÄÇ
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"Touch Delegate"
                                                                              style:UIBarButtonItemStylePlain
                                                                             target:self
                                                                             action:@selector(monitorTap)];
}

- (void)monitorTap {
    MonitorViewController *monitorVC = [[MonitorViewController alloc] init];
    [self.navigationController pushViewController:monitorVC animated:YES];
}

- (void)configTheTableView {
    UITableView *tableView = [[UITableView alloc]init];
    tableView.delegate =self;
    tableView.dataSource =self;
    [self.view addSubview:tableView];
    
    tableView.translatesAutoresizingMaskIntoConstraints = NO;
    [self.view addConstraints:[self configureTheConstraintArrayWithItem:tableView toItem:self.view]];
    
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return self.chartTypeNameArr.count;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return 40;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 50;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    UIView *view = [[UIView alloc]init];
//    view.backgroundColor = AAGrayColor;
    
    UILabel *label = [[UILabel alloc]init];
    label.textAlignment = NSTextAlignmentCenter;
    label.font = [UIFont boldSystemFontOfSize:16.0f];
    label.backgroundColor = AAGrayColor;
    label.textColor = [UIColor purpleColor];
    label.text = self.sectionTypeArr[section];
    [view addSubview:label];
    
    label.translatesAutoresizingMaskIntoConstraints = NO;
    [view addConstraints:[self configureTheConstraintArrayWithItem:label toItem:view]];
    return view;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    NSArray *arr = self.chartTypeNameArr[section];
    return arr.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    customTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell"];
    if (!cell) {
        cell = [[customTableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:@"cell"];
    }
    cell.label.text = self.chartTypeNameArr[indexPath.section][indexPath.row];
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
    switch (indexPath.section) {
        case 0: {
            /*Âü∫Á°ÄÁ±ªÂûãÂõæË°®*/
            SecondViewController *vc = SecondViewController.new;
            vc.chartType = indexPath.row;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
            
        case 1: {
            /*ÁâπÊÆäÁ±ªÂûãÂõæË°®*/
            SpecialChartVC *vc = SpecialChartVC.new;
            vc.chartType = indexPath.row;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
            
        case 2: {
            /*‰∏Ä‰∫õËá™ÂÆö‰πâÊ†∑ÂºèÂõæË°®*/
            CustomStyleChartVC *vc = CustomStyleChartVC.new;
            vc.chartType = indexPath.row;
            [self.navigationController  pushViewController:vc animated:YES];
        }
            break;
            
        case 3: {
            /*ÂõæË°®Êï∞ÊçÆÂä®ÊÄÅÂà∑Êñ∞*/
            MixedChartVC *vc = MixedChartVC.new;
            vc.chartTypeIndex = indexPath.row;
            [self.navigationController  pushViewController:vc animated:YES];
        }
            break;
            
        case 4: {
            /*ÂõæË°®Êï∞ÊçÆÂä®ÊÄÅÂà∑Êñ∞*/
            OnlyRefreshChartDataVC *vc = OnlyRefreshChartDataVC.new;
            vc.chartType = indexPath.row;
            [self.navigationController  pushViewController:vc animated:YES];
        }
            break;
            
        case 5: {
            /*JQueryÂä®ÁîªÊ†∑ÂºèÁ±ªÂûãÊºîÁ§∫*/
            ChartAnimationTypeVC *vc = ChartAnimationTypeVC.new;
            vc.chartType = indexPath.row;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
        
        case 6: {
            /*ÈÄöËøáAAOptionsÂÆû‰æãÂØπË±°Êù•ÁªòÂà∂ÂõæÂΩ¢*/
            DrawChartWithAAOptionsVC *vc = DrawChartWithAAOptionsVC.new;
            vc.selectedIndex = indexPath.row;
            vc.navigationItemTitle = self.chartTypeNameArr[indexPath.section][indexPath.row];
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
            
        case 7: {
            /*ÂêåÊó∂ÊòæÁ§∫Â§ö‰∏™ AAChartView*/
            if (indexPath.row == 0) {
                ShowManyChartViewVC *vc = ShowManyChartViewVC.new;
                [self.navigationController pushViewController:vc animated:YES];
            } else {
                ChartListVC *listVC = ChartListVC.new;
                [self.navigationController pushViewController:listVC animated:YES];
            }
        }
            break;
            
        case 8: {
            ChartSeriesHideOrShowVC *vc = ChartSeriesHideOrShowVC.new;
            vc.chartTypeIndex = indexPath.row;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
            
        case 9: {
            SupportJSFunctionVC *vc = SupportJSFunctionVC.new;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
            
        
        default:
            break;
    }
    
}

- (NSArray *)configureTheConstraintArrayWithItem:(UIView *)view1 toItem:(UIView *)view2 {
    return  @[[NSLayoutConstraint constraintWithItem:view1
                                           attribute:NSLayoutAttributeLeft
                                           relatedBy:NSLayoutRelationEqual
                                              toItem:view2
                                           attribute:NSLayoutAttributeLeft
                                          multiplier:1.0
                                            constant:0],
              [NSLayoutConstraint constraintWithItem:view1
                                           attribute:NSLayoutAttributeRight
                                           relatedBy:NSLayoutRelationEqual
                                              toItem:view2
                                           attribute:NSLayoutAttributeRight
                                          multiplier:1.0
                                            constant:0],
              [NSLayoutConstraint constraintWithItem:view1
                                           attribute:NSLayoutAttributeTop
                                           relatedBy:NSLayoutRelationEqual
                                              toItem:view2
                                           attribute:NSLayoutAttributeTop
                                          multiplier:1.0
                                            constant:0],
              [NSLayoutConstraint constraintWithItem:view1
                                           attribute:NSLayoutAttributeBottom
                                           relatedBy:NSLayoutRelationEqual
                                              toItem:view2
                                           attribute:NSLayoutAttributeBottom
                                          multiplier:1.0
                                            constant:0],
              
              ];
}

- (NSArray *)chartTypeNameArr {
    if (!_chartTypeNameArr) {
        _chartTypeNameArr = @[
                              /*Âü∫Á°ÄÁ±ªÂûãÂõæË°®*/
                              @[@"Column Chart---Êü±ÂΩ¢Âõæ",
                                @"Bar Chart---Êù°ÂΩ¢Âõæ",
                                @"Area Chart---ÊäòÁ∫øÂ°´ÂÖÖÂõæ",
                                @"Areaspline Chart---Êõ≤Á∫øÂ°´ÂÖÖÂõæ",
                                @"Line Chart---ÊäòÁ∫øÂõæ",
                                @"Spline Chart---Êõ≤Á∫øÂõæ",
                                @"Step Line Chart--Áõ¥ÊñπÊäòÁ∫øÂõæ",
                                @"Step Area Chart--Áõ¥ÊñπÊäòÁ∫øÂ°´ÂÖÖÂõæ",
                                @"Scatter Chart---Êï£ÁÇπÂõæ"
                                ],
                              /*ÁâπÊÆäÁ±ªÂûãÂõæË°®*/
                              @[@"Pie Chart---ÊâáÂΩ¢Âõæ",
                                @"Bubble Chart---Ê∞îÊ≥°Âõæ",
                                @"Scatter Chart--Êï£ÁÇπÂõæ",
                                @"Area Range Chart--ÊäòÁ∫øÂå∫ÂüüÈù¢ÁßØÂõæ",
                                @"Area Spline range Chart--Êõ≤Á∫øÂå∫ÂüüÈù¢ÁßØÂõæ",
                                @"Column Range Chart--Êü±ÂΩ¢ËåÉÂõ¥Âõæ",
                                @"Box Plot Chart---ÁÆ±Á∫øÂõæ",
                                @"Water Fall---ÁÄëÂ∏ÉÂõæ",
                                @"Pyramid Chart---ÈáëÂ≠óÂ°îÂõæ",
                                @"Funnel Chart---ÊºèÊñóÂõæ",],
                              /*‰∏Ä‰∫õËá™ÂÆö‰πâÈ£éÊ†ºÊ†∑ÂºèÂõæË°®*/
                              @[@"Colorful Column Chart---Â§öÂΩ©Êù°ÂΩ¢Âõæ",
                                @"Colorful Gradient Color Chart---Â§öÂΩ©È¢úËâ≤Ê∏êÂèòÊù°ÂΩ¢Âõæ",
                                @"Discontinuous Data Chart---Êï∞ÂÄº‰∏çËøûÁª≠ÁöÑÂõæË°®",
                                @"Mixed Line Chart---ËôöÂÆûÁ∫øÊ∑∑ÂêàÊäòÁ∫øÂõæ",
                                @"Colorful Column Chart---Â§öÂΩ©Êü±ÂΩ¢Âõæ",
                                @"Gradient Color Bar Chart---È¢úËâ≤Ê∏êÂèòÊù°ÂΩ¢Âõæ",
                                @"With Dividing Line---Â∏¶ÊúâÈòàÂÄºÂàÜÂâ≤Á∫øÂå∫ÂüüÂõæ",
                                @"Area Chart with minus--Â∏¶ÊúâË¥üÊï∞ÁöÑÂå∫ÂüüÂ°´ÂÖÖÂõæ",
                                @"Step Line Chart--Áõ¥ÊñπÊäòÁ∫øÂõæ",
                                @"Step Area Chart--Áõ¥ÊñπÊäòÁ∫øÂ°´ÂÖÖÂõæ",
                                @"Nightingale Rose Chart---Âçó‰∏ÅÊ†ºÂ∞îÁé´Áë∞Âõæ",
                                @"Specific Data Customize Datalabel",
                                @"Chart With Shadow Style---Â∏¶ÊúâÈò¥ÂΩ±ÊïàÊûú„ÅÆÂõæË°®"],
                              /*Ê∑∑ÂêàÁ±ªÂûãÂõæË°®*/
                              @[@"Arearange Mixed Line---Èù¢ÁßØËåÉÂõ¥ÂùáÁ∫øÂõæ",
                                @"Columnrange Mixed Line---Êü±ÂΩ¢ËåÉÂõ¥ÂõæÊ∑∑ÂêàÊäòÁ∫øÂõæ",
                                @"Stacking Column Mixed Line---Â†ÜÁßØÊü±ÂΩ¢ÂõæÊ∑∑ÂêàÊäòÁ∫øÂõæ",
                                @"Dash Style Types Mixed---Â§öÁßçÁ±ªÂûãÊõ≤Á∫øÊ∑∑ÂêàÂõæ",
                                @"Negative Color Mixed---Âü∫ÂáÜÁ∫ø‰ª•‰∏ãÂºÇËâ≤Ê∑∑ÂêàÂõæ",
                                @"scatterMixedLine---Êï£ÁÇπÂõæÊ∑∑ÂêàÊäòÁ∫øÂõæ",
                                @"Negative Color Mixed bubble---Âü∫ÂáÜÁ∫ø‰ª•‰∏ãÂºÇËâ≤Ê∞îÊ≥°Âõæ",
                                @"Polygon Mixed Scatter---Â§öËæπÂΩ¢Ê∑∑ÂêàÊï£ÁÇπÂõæ",
                                @"Polar Chart Mixed---ÊûÅÂú∞Ê∑∑ÂêàÂõæ"
                                
                                ],
                              /*ÂõæË°®Êï∞ÊçÆÂä®ÊÄÅÂà∑Êñ∞*/
                              @[@"Column Chart---Êü±ÂΩ¢Âõæ",
                                @"Bar Chart---Êù°ÂΩ¢Âõæ",
                                @"Area Chart---ÊäòÁ∫øÂ°´ÂÖÖÂõæ",
                                @"Areaspline Chart---Êõ≤Á∫øÂ°´ÂÖÖÂõæ",
                                @"Line Chart---ÊäòÁ∫øÂõæ",
                                @"Spline Chart---Êõ≤Á∫øÂõæ",
                                @"Step Line Chart--Áõ¥ÊñπÊäòÁ∫øÂõæ",
                                @"Step Area Chart--Áõ¥ÊñπÊäòÁ∫øÂ°´ÂÖÖÂõæ",
                                @"Scatter Chart---Êï£ÁÇπÂõæ"
                                ],
                              /*JQueryÂä®ÁîªÊ†∑ÂºèÁ±ªÂûãÊºîÁ§∫*/
                              @[@"Column Chart---Êü±ÂΩ¢Âõæ",
                                @"Bar Chart---Êù°ÂΩ¢Âõæ",
                                @"Area Chart---ÊäòÁ∫øÂ°´ÂÖÖÂõæ",
                                @"Areaspline Chart---Êõ≤Á∫øÂ°´ÂÖÖÂõæ",
                                @"Line Chart---ÊäòÁ∫øÂõæ",
                                @"Spline Chart---Êõ≤Á∫øÂõæ",
                                @"Step Line Chart--Áõ¥ÊñπÊäòÁ∫øÂõæ",
                                @"Step Area Chart--Áõ¥ÊñπÊäòÁ∫øÂ°´ÂÖÖÂõæ",
                                @"Scatter Chart --Êï£ÁÇπÂõæ",
                                @"Pie Chart --ÊâáÂΩ¢Âõæ"
                                ],
                              /*ÈÄöËøáAAOptionsÂÆû‰æãÂØπË±°Êù•ÁªòÂà∂ÂõæÂΩ¢*/
                              @[@"ÁªòÂà∂legendÂ±ÖÈ°∂ÈÉ®ÁöÑÂå∫ÂüüÂ°´ÂÖÖÂõæ",
                                @"ÁªòÂà∂Â∏¶Êúâ‰∏≠ÂøÉÊ†áÈ¢òÁöÑÁéØÂΩ¢Âõæ",
                                @"Ë∞ÉÊï¥ÊâáÂΩ¢ÂõæÁöÑÊ†áÈ¢òÂíåDataLabelÂ≠ó‰ΩìÊ†∑Âºè",
                                @"ÁªòÂà∂ÂµåÂ•óÁöÑÊü±Áä∂Âõæ",
                                @"Â§öËæπÂΩ¢Á∫øÊ°ÜÁöÑÈõ∑ËææÂõæ",
                                @"ÁºùÈöôÂæàÂ∞èÁöÑÊü±Áä∂Âõæ",
                                @"Custom style tooltip--Ëá™ÂÆö‰πâÊµÆÂä®ÊèêÁ§∫Ê°Ü",
                                @"Ë∞ÉÊï¥ÂõæË°®ÁöÑÂ∑¶Âè≥ËæπË∑ù",
                                @"ËÆæÁΩÆÂõæË°®ÁªòÂõæÂå∫ÁöÑËÉåÊôØÂõæÁâá",
                                @"Double Y Axises Chart---ÂèåYËΩ¥Ê∑∑ÂêàÂõæ",
                                @"Adjust Data Accuracy---Ë∞ÉÊï¥Êï∞ÊçÆÁ≤æÂ∫¶",
                                @"Adjust Group Padding---Ë∞ÉÊï¥groupÈó¥Ë∑ù",
                                @"Custom Style Stacked Column---Ëá™ÂÆö‰πâÂ†ÜÁßØÊü±Áä∂Âõæ",
                                @"Êó∂Èó¥‰∏çËøûÁª≠ÁöÑÁõ¥ÊñπÊäòÁ∫øÂ°´ÂÖÖÂõæËøûÊé•Âõæ",
                                @"Disable Animation ---Á¶ÅÁî®Âä®ÁîªÊïàÊûú",
                                @"Custom Legend Item Style---Ëá™ÂÆö‰πâÂõæ‰æãÊ†∑Âºè",
                                @"Mirror Chart ---ÈïúÂÉèÊïàÊûúÁöÑÊü±Áä∂Âõæ",
                                @"yËΩ¥Âú®Âè≥‰æßÁöÑÂõæË°®",
                                @"ÁÆÄÊòì‰ª™Ë°®Âõæ",
                                @"Â∏¶ÊúâÈ¢úËâ≤Â∏¶ÁöÑ‰ª™Ë°®Âõæ",
                                @"Â∏¶ÊúâÈ¢úËâ≤Ê†áÂøóÂ∏¶ÁöÑÂõæË°®",
                                @"Â∏¶ÊúâÈ¢úËâ≤Ê†áÂøóÁ∫øÁöÑÂõæË°®",
                                @"Ëá™ÂÆö‰πâDataLabelsÊ†∑Âºè",
                                @"ÂçïÁã¨Ëá™ÂÆö‰πâÊåáÂÆöÁöÑdataÁöÑDataLabelsÊ†∑Âºè"
                                ],
                              /*ÂêåÊó∂ÊòæÁ§∫Â§ö‰∏™ AAChartView*/
                              @[@"ÂêåÊó∂ÊòæÁ§∫Â§ö‰∏™ AAChartView",
                                @"UITableView‰∏äÊòæÁ§∫Â§ö‰∏™ AAChartView"
                                ],
                              /*ÈöêËóèÊàñÊòæÁ§∫ÂõæË°®ÁöÑSeries*/
                              @[@"Column Chart---Êü±ÂΩ¢Âõæ",
                                @"Bar Chart---Êù°ÂΩ¢Âõæ",
                                @"Area Chart---ÊäòÁ∫øÂ°´ÂÖÖÂõæ",
                                @"Areaspline Chart---Êõ≤Á∫øÂ°´ÂÖÖÂõæ",
                                @"Line Chart---ÊäòÁ∫øÂõæ",
                                @"Spline Chart---Êõ≤Á∫øÂõæ",
                                @"Step Line Chart--Áõ¥ÊñπÊäòÁ∫øÂõæ",
                                @"Step Area Chart--Áõ¥ÊñπÊäòÁ∫øÂ°´ÂÖÖÂõæ",
                                @"Scatter Chart---Êï£ÁÇπÂõæ"
                                ],
                              @[@"support tooltip formatter JS Function"]
                              ];
    }
    return _chartTypeNameArr;
}

- (NSArray *)sectionTypeArr {
    if (!_sectionTypeArr) {
        _sectionTypeArr = @[@"Basic Type---Âü∫Á°ÄÁ±ªÂûã",
                            @"Special Type---ÁâπÂà´Á±ªÂûã",
                            @"Some Custom Style---‰∏Ä‰∫õËá™ÂÆö‰πâÈ£éÊ†ºÊ†∑ÂºèÂõæË°®",
                            @"Mixed Type Chart---Ê∑∑ÂêàÂõæË°®",
                            @"Real-time Refresh---Âç≥Êó∂Âà∑Êñ∞",
                            @"Animation Type---Ê∏≤ÊüìÂä®Áîª",
                            @"AAOptions---Use AAOptions",
                            @"ÂêåÊó∂ÊòæÁ§∫Â§ö‰∏™ AAChartView",
                            @"Hide Or Show Chart Series---ÈöêËóèÊàñÊòæÁ§∫ÂÜÖÂÆπ",
                            @"Support JS Funtion"];
    }
    return _sectionTypeArr;
}

@end


@implementation customTableViewCell

- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier {
    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
    if (self) {
        _label = [[UILabel alloc]init];
        _label.frame = CGRectMake(60, 0, self.frame.size.width-40, 40);
        _label.textAlignment = NSTextAlignmentLeft;
        _label.font = [UIFont systemFontOfSize:12.f];
        _label.textColor = [UIColor darkGrayColor];
        [self addSubview:_label];
        self.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    }
    return self;
}

@end
